## ======================================================================
## groups
## ======================================================================

groups:
- name: all
  jobs:
  - compile_gpdb_centos
  - compile_gpdb_centos6
  - compile_gpdb_centos7
  - compile_gpdb_sles
  - cs-fts_centos
  - cs-storage_centos
  - cs-subtransaction_centos
  - cs-uao_centos
  - cs-bin-swap
  - cs_walrep_1
  - cs_walrep_2
  - cs_pg_twophase_01_10
  - cs_pg_twophase_11_20
  - cs_pg_twophase_21_30
  - cs_pg_twophase_31_40
  - cs_pg_twophase_41_49
  - cs_pg_twophase_switch
  - cs_crash_recovery_schema_topology
  - cs_crash_recovery_04_10
  - cs_crash_recovery_11_20
  - cs_crash_recovery_21_30
  - cs_crash_recovery_31_42
  - cs_filerep_end_to_end_full_primary
  - cs_filerep_end_to_end_incr_primary
  - cs_filerep_end_to_end_full_mirror
  - cs_filerep_end_to_end_incr_mirror
  - icb_orca_centos
  - icb_planner_centos
  - icg_orca_centos
  - icg_orca_sles
  - icg_planner_centos
  - icg_planner_sles
  - ic_externaltable_centos
  - ic_externaltable_sles
  - regression_tests_gpfdist_centos
  - regression_tests_gpfdist_sles
  - regression_tests_gpcloud_centos
  - regression_tests_gphdfs_hadoop_centos
  - regression_tests_gphdfs_mapr_centos
  - MU_check_centos
  - pt-rebuild
  - gpdb_rc_packaging_centos
  - gpdb_src_packaging
  - gpdb_rc_packaging_sles
  - DPM_backup-restore
  - DPM_backup-restore_filename_compatibility
  - DPM_backup-restore_netbackup_part1
  - DPM_backup-restore_netbackup_part2
  - DPM_backup-restore_netbackup_part3
  - DPM_netbackup_filename_compatibility_part1
  - DPM_netbackup_filename_compatibility_part2
  - DPM_netbackup_filename_compatibility_part3
  - DPM_backup-restore_ddboost_part1
  - DPM_backup-restore_ddboost_part2
  - DPM_backup-restore_ddboost_part3
  - DPM_ddboost_filename_compatibility_part1
  - DPM_ddboost_filename_compatibility_part2
  - DPM_ddboost_filename_compatibility_part3
  - DPM_gptransfer-43x-to-43x
  - QP_memory-accounting
  - QP_optimizer-functional
  - mpp-interconnect
  - mpp_interconnect_sles
  - compile_gpdb_windows_ccl
  - TINC_pgcrypto
  - MM_analyzedb
  - MM_gpcheckcat
  - MM_gpexpand_1
  - MM_gpexpand_2
  - MM_gppkg
  - MM_gprecoverseg
  - MADlib_Test_gppkg_Orca_centos5
  - MADlib_Test_gppkg_Planner_centos5

- name: Release
  jobs:
  - Release_Candidate

- name: CentOS/RHEL
  jobs:
  - compile_gpdb_centos
  - compile_gpdb_centos6
  - compile_gpdb_centos7
  - icb_orca_centos
  - icb_planner_centos
  - icg_orca_centos
  - icg_planner_centos
  - ic_externaltable_centos
  - regression_tests_gpcloud_centos
  - regression_tests_gphdfs_hadoop_centos
  - regression_tests_gphdfs_mapr_centos
  - MU_check_centos
  - pt-rebuild
  - TINC_pgcrypto
  - gpdb_rc_packaging_centos
  - gpdb_src_packaging
  - mpp-interconnect
- name: SLES
  jobs:
  - compile_gpdb_sles
  - icg_orca_sles
  - icg_planner_sles
  - ic_externaltable_sles
  - gpdb_rc_packaging_sles
  - mpp_interconnect_sles
  - regression_tests_gpfdist_sles
- name: CS
  jobs:
  - cs-fts_centos
  - cs-storage_centos
  - cs-subtransaction_centos
  - cs-uao_centos
  - cs-bin-swap
  - cs_walrep_1
  - cs_walrep_2
  - cs_pg_twophase_01_10
  - cs_pg_twophase_11_20
  - cs_pg_twophase_21_30
  - cs_pg_twophase_31_40
  - cs_pg_twophase_41_49
  - cs_pg_twophase_switch
  - cs_crash_recovery_schema_topology
  - cs_crash_recovery_04_10
  - cs_crash_recovery_11_20
  - cs_crash_recovery_21_30
  - cs_crash_recovery_31_42
  - cs_filerep_end_to_end_full_primary
  - cs_filerep_end_to_end_incr_primary
  - cs_filerep_end_to_end_full_mirror
  - cs_filerep_end_to_end_incr_mirror
  - gpdb_rc_packaging_centos
- name: QP
  jobs:
  - QP_memory-accounting
  - QP_optimizer-functional
- name: terraform
  jobs:
  - MM_gpcheckcat
  - MM_gppkg
  - MM_gprecoverseg
  - DPM_backup-restore
  - DPM_backup-restore_filename_compatibility
  - DPM_backup-restore_ddboost_part1
  - DPM_backup-restore_ddboost_part2
  - DPM_backup-restore_ddboost_part3
  - DPM_ddboost_filename_compatibility_part1
  - DPM_ddboost_filename_compatibility_part2
  - DPM_ddboost_filename_compatibility_part3
  - DPM_backup-restore_netbackup_part1
  - DPM_backup-restore_netbackup_part2
  - DPM_backup-restore_netbackup_part3
  - DPM_netbackup_filename_compatibility_part1
  - DPM_netbackup_filename_compatibility_part2
  - DPM_netbackup_filename_compatibility_part3
  - DPM_gptransfer-43x-to-43x
  - mpp_interconnect_sles
- name: MM
  jobs:
  - MM_analyzedb
  - MM_gpcheckcat
  - MM_gpexpand_1
  - MM_gpexpand_2
  - MM_gppkg
  - MM_gprecoverseg
- name: DPM
  jobs:
  - DPM_backup-restore
  - DPM_backup-restore_filename_compatibility
  - DPM_backup-restore_ddboost_part1
  - DPM_backup-restore_ddboost_part2
  - DPM_backup-restore_ddboost_part3
  - DPM_ddboost_filename_compatibility_part1
  - DPM_ddboost_filename_compatibility_part2
  - DPM_ddboost_filename_compatibility_part3
  - DPM_backup-restore_netbackup_part1
  - DPM_backup-restore_netbackup_part2
  - DPM_backup-restore_netbackup_part3
  - DPM_netbackup_filename_compatibility_part1
  - DPM_netbackup_filename_compatibility_part2
  - DPM_netbackup_filename_compatibility_part3
  - DPM_gptransfer-43x-to-43x
- name: Windows
  jobs:
  - compile_gpdb_windows_ccl
- name: AdvancedAnalytics
  jobs:
  - MADlib_Test_gppkg_Orca_centos5
  - MADlib_Test_gppkg_Planner_centos5

- name: Bootstrap
  jobs:
  - bootstrap-ccache

## ======================================================================
## anchors
## ======================================================================
ccp_default_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

dpm_ccp_create_params_anchor: &dpm_ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/aws/

ccp_vars_anchor: &ccp_default_vars
  instance_type: n1-standard-1
  PLATFORM: centos6

ccp_aws_vars_anchor: &ccp_aws_default_vars
  aws_instance-node-instance_type: t2.medium
  aws_ebs_volume_type: standard
  PLATFORM: centos6

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google/
    vars:
      aws_instance-node-instance_type: t2.micro
  get_params:
    action: destroy

dpm_ccp_destroy_anchor: &dpm_ccp_destroy
  put: terraform
  resource: terraform_for_dpm
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/aws/
    vars:
      aws_instance-node-instance_type: t2.micro
  get_params:
    action: destroy

ccp_nvme_destroy_anchor: &ccp_destroy_nvme
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google-nvme-block-device/
    vars:
      aws_instance-node-instance_type: t2.micro
      instance_type: n1-standard-1
  get_params:
    action: destroy

ccp_destroy_2_cluster_anchor: &ccp_destroy_2_cluster
  do:
  - *ccp_destroy
  - put: terraform2
    params:
      action: destroy
      env_name_file: terraform2/name
      terraform_source: ccp_src/google/
      vars:
        PLATFORM: centos6
        aws_instance-node-instance_type: t2.micro
        cluster_suffix: "-2"
    get_params:
      action: destroy

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{tf-machine-region}}
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: {{gpdb5-pipeline-tf-bucket-name}}
  CLOUD_PROVIDER: google

dpm_ccp_gen_cluster_default_params_anchor: &dpm_ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{tf-machine-region}}
  BUCKET_PATH: clusters-aws/
  BUCKET_NAME: {{gpdb5-pipeline-tf-bucket-name}}
  CLOUD_PROVIDER: aws

set_failed_anchor: &set_failed
  do:
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/google/ccp_failed_test.sh'
      params:
        GOOGLE_CREDENTIALS: {{google-service-account-key}}
        GOOGLE_PROJECT_ID: {{google-project-id}}
        GOOGLE_ZONE: {{google-zone}}
        GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
        AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-bucket-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-bucket-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-google/
        BUCKET_NAME: {{gpdb5-pipeline-tf-bucket-name}}

set_failed_anchor: &set_failed_dpm
  do:
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/aws/ccp_failed_test.sh'
      params:
        AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-aws/
        BUCKET_NAME: {{gpdb5-pipeline-tf-bucket-name}}

set_failed_anchor_2: &set_failed_2_cluster
  do:
  - *set_failed
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform2
      run:
        path: 'ccp_src/google/ccp_failed_test.sh'
      params:
        GOOGLE_CREDENTIALS: {{google-service-account-key}}
        GOOGLE_PROJECT_ID: {{google-project-id}}
        GOOGLE_ZONE: {{google-zone}}
        GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
        AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-google/
        BUCKET_NAME: {{gpdb5-pipeline-tf-bucket-name}}

ccp_aggregate_gets_anchor: &ccp_aggregate_gets
  - get: gpdb_src
    params: {submodules: none}
    passed: [compile_gpdb_centos]
  - get: sync_tools_gpdb
    resource: sync_tools_gpdb_centos
    passed: [compile_gpdb_centos]
  - get: gpdb_binary
    resource: bin_gpdb_centos
    passed: [compile_gpdb_centos]
    trigger: true
  - get: ccp_src
  - get: centos-gpdb-dev-6


ccp_aws_aggregate_gets_anchor: &ccp_aws_aggregate_gets
  - get: gpdb_src
    params: {submodules: none}
    passed: [compile_gpdb_centos]
  - get: sync_tools_gpdb
    resource: sync_tools_gpdb_centos
    passed: [compile_gpdb_centos]
  - get: gpdb_binary
    resource: bin_gpdb_centos
    passed: [compile_gpdb_centos]
    trigger: true
  - get: ccp_src
  - get: centos-gpdb-dev-6

ccp_terraform_bigger_vars_anchor: &ccp_terraform_bigger_vars
  instance_type: n1-standard-2

cs_ccp_terraform_params_anchor: &cs_ccp_terraform_params
  params:
    <<: *ccp_default_params
    vars:
      <<: *ccp_default_vars
      <<: *ccp_terraform_bigger_vars

ccp_gen_cluster_params_anchor: &ccp_gen_cluster_params
  file: ccp_src/ci/tasks/gen_cluster.yml
  params:
    <<: *ccp_gen_cluster_default_params

ccp_run_tinc_tests_params_anchor: &ccp_run_tinc_tests_params
  file: gpdb_src/ci/concourse/run_tinc.yml
  image: centos-gpdb-dev-6
  on_success:
    <<: *ccp_destroy
  on_failure:
    <<: *set_failed

## ======================================================================
## resource types
## ======================================================================

resource_types:
- name: s3-week-long-urls
  type: docker-image
  source:
    repository: pivotaldata/s3-resource

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

## ======================================================================
## resources
## ======================================================================

resources:
- name: gpdb_src
  type: git
  source:
    branch: {{gpdb-git-branch}}
    private_key: {{gpdb-git-key}}
    uri: {{gpdb-git-remote}}

- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{gpdb5-pipeline-tf-machine-access-key-id}}
      secret_access_key: {{gpdb5-pipeline-tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is on purpose not parameterized. All tfstates will go to this spot
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- name: terraform2
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{gpdb5-pipeline-tf-machine-access-key-id}}
      secret_access_key: {{gpdb5-pipeline-tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- name: terraform_for_dpm
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{gpdb5-pipeline-tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{gpdb5-pipeline-tf-machine-secret-access-key}}
    storage:
      access_key_id: {{gpdb5-pipeline-tf-machine-access-key-id}}
      secret_access_key: {{gpdb5-pipeline-tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is on purpose not parameterized. All tfstates will go to this spot
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-aws/

- name: centos-gpdb-dev-5
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '5'

- name: centos-mingw
  type: docker-image
  source:
    repository: pivotaldata/centos-mingw

- name: centos-gpdb-dev-6
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '6'

- name: centos-gpdb-dev-7
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '7'

- name: bin_gpdb_centos7
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb_centos7/bin_gpdb.tar.gz

- name: bin_gpdb_centos
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb_centos/bin_gpdb.tar.gz

- name: copy_bin_from
  type: s3
  source:
    access_key_id: {{gpdb5-pipeline-bucket-access-key-id}}
    secret_access_key: {{gpdb5-pipeline-bucket-secret-access-key}}
    bucket: 4.3-stable-binary-swap
    region_name: {{aws-region}}
    versioned_file: 4.3.4.1/greenplum-db-4.3.4.1-build-2-RHEL5-x86_64.zip

- name: bin_gpdb4-3-11-3_centos
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{gpdb4-3-11-3-bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb-4.3.11.3.tar.gz

- name: bin_gpdb_sles
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb_sles/bin_gpdb.tar.gz

- name: sync_tools_gpdb_centos
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: sync_tools_gpdb_centos/sync_tools_gpdb.tar.gz

- name: sync_tools_gpdb_centos7
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: sync_tools_gpdb_centos7/sync_tools_gpdb.tar.gz

- name: ccache_empty
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: ccache_empty/ccache_gpdb.tar.gz

- name: ccache_gpdb_centos5
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: ccache_gpdb_centos5/ccache_gpdb.tar.gz

- name: ccache_gpdb_centos6
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: ccache_gpdb_centos6/ccache_gpdb.tar.gz

- name: ccache_gpdb_centos7
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: ccache_gpdb_centos7/ccache_gpdb.tar.gz

- name: ccache_gpdb_sles11
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: ccache_gpdb_sles11/ccache_gpdb.tar.gz

- name: bin_gpdb_windows_clients
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: windows-ccl-alpha/greenplum-clients-4.(.*)-WinXP-x86_32.msi

- name: bin_gpdb_windows_connectivity
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: windows-ccl-alpha/greenplum-connectivity-4.(.*)-WinXP-x86_32.msi

- name: bin_gpdb_windows_loaders
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: windows-ccl-alpha/greenplum-loaders-4.(.*)-WinXP-x86_32.msi

- name: sync_tools_gpdb_sles
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: sync_tools_gpdb_sles/sync_tools_gpdb.tar.gz

- name: gpdb_src_archive
  type: s3-week-long-urls
  source:
    private: true
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: gpdb_src_archive/greenplum-db-4.(.*)-src.tar.gz

- name: installer_rhel5_gpdb_rc
  type: s3-week-long-urls
  source:
    private: true
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-4.(.*)-rhel5-x86_64.zip

- name: installer_rhel5_gpdb_rc_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-4.(.*)-rhel5-x86_64.zip.sha256

- name: installer_rhel5_gpdb_clients
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-clients-4.(.*)-build-1-rhel5-x86_64.zip

- name: installer_rhel5_gpdb_clients_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-clients-4.(.*)-build-1-rhel5-x86_64.zip.sha256

- name: installer_sles11_gpdb_rc
  type: s3-week-long-urls
  source:
    private: true
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-4.(.*)-sles11-x86_64.zip

- name: installer_sles11_gpdb_rc_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-4.(.*)-sles11-x86_64.zip.sha256

- name: installer_appliance_rhel5_gpdb_rc
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-appliance-4.(.*)-rhel5-x86_64.zip

- name: installer_appliance_rhel5_gpdb_rc_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-db-appliance-4.(.*)-rhel5-x86_64.zip.sha256

- name: qautils_rhel5_tarball
  type: s3-week-long-urls
  source:
    private: true
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/QAUtils-rhel5-x86_64.tar.gz

- name: qautils_sles11_tarball
  type: s3-week-long-urls
  source:
    private: true
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/QAUtils-sles11-x86_64.tar.gz

- name: installer_sles11_gpdb_clients
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-clients-4.(.*)-build-1-sles11-x86_64.zip

- name: installer_sles11_gpdb_clients_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-clients-4.(.*)-build-1-sles11-x86_64.zip.sha256

- name: installer_rhel5_gpdb_connectivity
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-connectivity-4.(.*)-build-1-rhel5-x86_64.zip

- name: installer_rhel5_gpdb_connectivity_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-connectivity-4.(.*)-build-1-rhel5-x86_64.zip.sha256

- name: installer_sles11_gpdb_connectivity
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-connectivity-4.(.*)-build-1-sles11-x86_64.zip

- name: installer_sles11_gpdb_connectivity_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-connectivity-4.(.*)-build-1-sles11-x86_64.zip.sha256

- name: installer_rhel5_gpdb_loaders
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-loaders-4.(.*)-build-1-rhel5-x86_64.zip

- name: installer_rhel5_gpdb_loaders_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-loaders-4.(.*)-build-1-rhel5-x86_64.zip.sha256

- name: installer_sles11_gpdb_loaders
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-loaders-4.(.*)-build-1-sles11-x86_64.zip

- name: installer_sles11_gpdb_loaders_sha256
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: deliverables/greenplum-loaders-4.(.*)-build-1-sles11-x86_64.zip.sha256

- name: postgis_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/postgis-ossv2.0.3_pv2.0.2_gpdb4.3orca-rhel5-x86_64.gppkg

- name: postgis_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/postgis-ossv2.0.3_pv2.0.2_gpdb4.3orca-sles11-x86_64.gppkg

- name: ddboost_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/ddboostlib-2.6.2_pv1.2.1_gpdb4.3orca-rhel5-x86_64.gppkg

- name: ddboost_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/ddboostlib-2.6.2_pv1.2.1_gpdb4.3orca-sles11-x86_64.gppkg

- name: pgcrypto_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/pgcrypto-ossv1.1_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg

- name: pgcrypto_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/pgcrypto-ossv1.1_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg

- name: plperl_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg

- name: plperl_rhel6_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel6-x86_64.gppkg

- name: plperl_rhel7_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel7-x86_64.gppkg

- name: plperl_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg

- name: pljava_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/pljava-ossv1.4.0_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg

- name: released_pljava_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{procedural-languages-concourse-bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: release/gpdb4/pljava/pljava-(.*)-gp4-rhel5-x86_64.gppkg

- name: pljava_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/pljava-ossv1.4.0_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg

- name: plr_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plr-ossv8.3.0.15_pv2.1_gpdb4.3orca-rhel5-x86_64.gppkg

- name: released_plr_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{procedural-languages-concourse-bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: release/gpdb4/plr/plr-(.*)-GPDB4.3-rhel5-x86_64.gppkg

- name: plr_sles11_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plr-ossv8.3.0.15_pv2.1_gpdb4.3orca-sles11-x86_64.gppkg

# Resource used for Netbackup test
- name: netbackup-client-installer
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{gpdb4-3-11-3-bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: netbackup-installation/NetBackup_7.7.3_CLIENTS_RHEL_2.6.18.tar.gz

# Resource used for DDBoost test
- name: ddboost_rpm
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{gpdb4-3-11-3-bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: compat-libstdc-33-3.2.3-69.el6.x86_64.rpm

# Resources used for gppkg TINC tests.
# These are old gppkgs that are not compiled in concourse.
- name: libgppc_rhel5_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: gppkgs-used-for-tinc-tests
    region_name: us-west-2
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/libgppc-pv1.2_gpdb4.3orca-rhel5-x86_64.gppkg

- name: before_orca_plperl_rhel6_gppkg
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: gppkgs-used-for-tinc-tests
    region_name: us-west-2
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: deliverables/plperl-ossv5.12.4_pv1.3_gpdb4.3-rhel6-x86_64.gppkg

- name: madlib_ci
  type: git
  source:
    branch: {{madlib-ci-git-branch}}
    uri: {{madlib-ci-git-remote}}
    private_key: {{madlib-ci-git-key}}

- name: madlib_gppkg
  type: s3
  source:
    access_key_id: {{gpdb5-pipeline-bucket-access-key-id}}
    bucket: madlib-concourse
    region_name: {{aws-region}}
    secret_access_key: {{gpdb5-pipeline-bucket-secret-access-key}}
    regexp: release/gpdb4/madlib-(.*)-gp4.3orca-rhel5-x86_64.gppkg
## ======================================================================
## jobs
## ======================================================================

# Stage 1: Build and C Unit Tests

jobs:
- name: compile_gpdb_centos
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    - get: centos-gpdb-dev-5
    - get: ccache_snapshot
      resource: ccache_gpdb_centos5
      trigger: false
    - get: centos-gpdb-dev-6
  - task: get_ivy_dependencies
    file: gpdb_src/ci/concourse/get_ivy_dependencies.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TASK_OS: centos
      TASK_OS_VERSION: 6
      TARGET_OS: centos
      TARGET_OS_VERSION: 5
  - task: compile_gpdb
    file: gpdb_src/ci/concourse/compile_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      TARGET_OS: centos
      TARGET_OS_VERSION: 5
      BLD_TARGETS: clients connectivity loaders
  - aggregate:
    - put: bin_gpdb_centos
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz
    - put: installer_rhel5_gpdb_clients
      params:
        file: gpdb_artifacts/greenplum-clients-*-rhel5-x86_64.zip
    - put: installer_rhel5_gpdb_clients_sha256
      params:
        file: gpdb_artifacts/greenplum-clients-*-rhel5-x86_64.zip.sha256
    - put: installer_rhel5_gpdb_connectivity
      params:
        file: gpdb_artifacts/greenplum-connectivity-*-rhel5-x86_64.zip
    - put: installer_rhel5_gpdb_connectivity_sha256
      params:
        file: gpdb_artifacts/greenplum-connectivity-*-rhel5-x86_64.zip.sha256
    - put: installer_rhel5_gpdb_loaders
      params:
        file: gpdb_artifacts/greenplum-loaders-*-rhel5-x86_64.zip
    - put: installer_rhel5_gpdb_loaders_sha256
      params:
        file: gpdb_artifacts/greenplum-loaders-*-rhel5-x86_64.zip.sha256
    - put: postgis_rhel5_gppkg
      params:
        file: gpdb_artifacts/postgis-ossv2.0.3_pv2.0.2_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: pgcrypto_rhel5_gppkg
      params:
        file: gpdb_artifacts/pgcrypto-ossv1.1_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: ddboost_rhel5_gppkg
      params:
        file: gpdb_artifacts/ddboostlib-2.6.2_pv1.2.1_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: pljava_rhel5_gppkg
      params:
        file: gpdb_artifacts/pljava-ossv1.4.0_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: plperl_rhel5_gppkg
      params:
        file: gpdb_artifacts/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: plr_rhel5_gppkg
      params:
        file: gpdb_artifacts/plr-ossv8.3.0.15_pv2.1_gpdb4.3orca-rhel5-x86_64.gppkg
    - put: sync_tools_gpdb_centos
      params:
        file: gpdb_artifacts/sync_tools_gpdb.tar.gz
    - put: ccache_gpdb_centos5
      params:
        file: gpdb_artifacts/ccache_gpdb.tar.gz


- name: TINC_pgcrypto
  plan:
  - aggregate:
    - get: centos-gpdb-dev-5
    - get: gpdb_src
      passed:
      - compile_gpdb_centos
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed:
      - compile_gpdb_centos
    - get: pgcrypto_gppkg
      resource: pgcrypto_rhel5_gppkg
      passed:
      - compile_gpdb_centos
      trigger: true
  - task: test_pgcrypto
    image: centos-gpdb-dev-5
    file: gpdb_src/ci/concourse/test_pgcrypto.yml



- name: compile_gpdb_windows_ccl
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["wix"]
      trigger: true
    - get: centos-mingw
      tags: ["wix"]
    - get: ccache_snapshot
      tags: ["wix"]
      resource: ccache_empty
    - get: centos-gpdb-dev-6
  - task: get_ivy_dependencies
    file: gpdb_src/ci/concourse/get_ivy_dependencies.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TASK_OS: centos
      TASK_OS_VERSION: 6
      TARGET_OS: win32
      TARGET_OS_VERSION:
  - task: compile_gpdb
    tags: ["wix"]
    file: gpdb_src/ci/concourse/compile_gpdb.yml
    image: centos-mingw
    params:
      TARGET_OS: win32
      TARGET_OS_VERSION:
      BLD_TARGETS: clients connectivity loaders
  - aggregate:
    - put: bin_gpdb_windows_clients
      tags: ["wix"]
      params:
        file: gpdb_artifacts/greenplum-clients-*-WinXP-x86_32.msi
    - put: bin_gpdb_windows_connectivity
      tags: ["wix"]
      params:
        file: gpdb_artifacts/greenplum-connectivity-*-WinXP-x86_32.msi
    - put: bin_gpdb_windows_loaders
      tags: ["wix"]
      params:
        file: gpdb_artifacts/greenplum-loaders-*-WinXP-x86_32.msi

- name: compile_gpdb_sles
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    - get: ccache_snapshot
      resource: ccache_gpdb_sles11
      trigger: false
    - get: centos-gpdb-dev-6
  - task: get_ivy_dependencies
    file: gpdb_src/ci/concourse/get_ivy_dependencies.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TASK_OS: centos
      TASK_OS_VERSION: 6
      TARGET_OS: sles
      TARGET_OS_VERSION: 11
  - task: build_gpdb
    file: gpdb_src/ci/concourse/compile_gpdb_sles11.yml
    params:
      TARGET_OS: sles
      TARGET_OS_VERSION: 11
      BLD_TARGETS: clients connectivity loaders
  - aggregate:
    - put: bin_gpdb_sles
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz
    - put: installer_sles11_gpdb_clients
      params:
        file: gpdb_artifacts/greenplum-clients-*-sles11-x86_64.zip
    - put: installer_sles11_gpdb_clients_sha256
      params:
        file: gpdb_artifacts/greenplum-clients-*-sles11-x86_64.zip.sha256
    - put: installer_sles11_gpdb_connectivity
      params:
        file: gpdb_artifacts/greenplum-connectivity-*-sles11-x86_64.zip
    - put: installer_sles11_gpdb_connectivity_sha256
      params:
        file: gpdb_artifacts/greenplum-connectivity-*-sles11-x86_64.zip.sha256
    - put: installer_sles11_gpdb_loaders
      params:
        file: gpdb_artifacts/greenplum-loaders-*-sles11-x86_64.zip
    - put: installer_sles11_gpdb_loaders_sha256
      params:
        file: gpdb_artifacts/greenplum-loaders-*-sles11-x86_64.zip.sha256
    - put: postgis_sles11_gppkg
      params:
        file: gpdb_artifacts/postgis-ossv2.0.3_pv2.0.2_gpdb4.3orca-sles11-x86_64.gppkg
    - put: pgcrypto_sles11_gppkg
      params:
        file: gpdb_artifacts/pgcrypto-ossv1.1_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg
    - put: ddboost_sles11_gppkg
      params:
        file: gpdb_artifacts/ddboostlib-2.6.2_pv1.2.1_gpdb4.3orca-sles11-x86_64.gppkg
    - put: pljava_sles11_gppkg
      params:
        file: gpdb_artifacts/pljava-ossv1.4.0_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg
    - put: plperl_sles11_gppkg
      params:
        file: gpdb_artifacts/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-sles11-x86_64.gppkg
    - put: plr_sles11_gppkg
      params:
        file: gpdb_artifacts/plr-ossv8.3.0.15_pv2.1_gpdb4.3orca-sles11-x86_64.gppkg
    - put: sync_tools_gpdb_sles
      params:
        file: gpdb_artifacts/sync_tools_gpdb.tar.gz
    - put: ccache_gpdb_sles11
      params:
        file: gpdb_artifacts/ccache_gpdb.tar.gz

# Compile gpdb and plperl on centos6
- name: compile_gpdb_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    - get: centos-gpdb-dev-6
    - get: ccache_snapshot
      resource: ccache_gpdb_centos6
      trigger: false
  - task: get_ivy_dependencies
    file: gpdb_src/ci/concourse/get_ivy_dependencies.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TASK_OS: centos
      TASK_OS_VERSION: 6
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
  - task: compile_gpdb
    file: gpdb_src/ci/concourse/compile_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
      BLD_TARGETS: ''
  - put: plperl_rhel6_gppkg
    params:
      file: gpdb_artifacts/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel6-x86_64.gppkg
  - put: ccache_gpdb_centos6
    params:
      file: gpdb_artifacts/ccache_gpdb.tar.gz

# Compile gpdb and plperl on centos7
- name: compile_gpdb_centos7
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    - get: centos-gpdb-dev-7
    - get: ccache_snapshot
      resource: ccache_gpdb_centos7
      trigger: false
    - get: centos-gpdb-dev-6
  - task: get_ivy_dependencies
    file: gpdb_src/ci/concourse/get_ivy_dependencies.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TASK_OS: centos
      TASK_OS_VERSION: 6
      TARGET_OS: centos
      TARGET_OS_VERSION: 7
  - task: compile_gpdb
    file: gpdb_src/ci/concourse/compile_gpdb.yml
    image: centos-gpdb-dev-7
    params:
      TARGET_OS: centos
      TARGET_OS_VERSION: 7
      BLD_TARGETS: ''
  - put: bin_gpdb_centos7
    params:
      file: gpdb_artifacts/bin_gpdb.tar.gz
  - put: plperl_rhel7_gppkg
    params:
      file: gpdb_artifacts/plperl-ossv5.12.4_pv1.3_gpdb4.3orca-rhel7-x86_64.gppkg
  - put: ccache_gpdb_centos7
    params:
      file: gpdb_artifacts/ccache_gpdb.tar.gz
  - put: sync_tools_gpdb_centos7
    params:
      file: gpdb_artifacts/sync_tools_gpdb.tar.gz

# Stage 2: Installcheck, Python unit, and local TINC tests

- name: icb_orca_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: installcheck-bugbuster
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off optimizer=on
      TEST_OS: centos

- name: icb_planner_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: installcheck-bugbuster
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
      TEST_OS: centos

- name: icg_orca_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: installcheck-good
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off optimizer=on
      TEST_OS: centos

- name: icg_orca_sles
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_sles]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_sles
      passed: [compile_gpdb_sles]
    - get: bin_gpdb
      resource: bin_gpdb_sles
      passed: [compile_gpdb_sles]
      trigger: true
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb_sles11.yml
    params:
      MAKE_TEST_COMMAND: installcheck-good
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off optimizer=on
      TEST_OS: sles

- name: icg_planner_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: installcheck-good
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
      TEST_OS: centos

- name: icg_planner_sles
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_sles]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_sles
      passed: [compile_gpdb_sles]
    - get: bin_gpdb
      resource: bin_gpdb_sles
      passed: [compile_gpdb_sles]
      trigger: true
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb_sles11.yml
    params:
      MAKE_TEST_COMMAND: installcheck-good
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
      TEST_OS: sles

- name: ic_externaltable_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - aggregate:
    - task: ic_gpdb
      file: gpdb_src/ci/concourse/ic_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: installcheck-externaltable
        BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
        TEST_OS: centos
    - task: basic_exttab
      timeout: 1h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: basic_exttab
        TEST_OS: centos

- name: ic_externaltable_sles
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_sles]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_sles
      passed: [compile_gpdb_sles]
    - get: bin_gpdb
      resource: bin_gpdb_sles
      passed: [compile_gpdb_sles]
      trigger: true
  - aggregate:
    - task: ic_gpdb
      file: gpdb_src/ci/concourse/ic_gpdb_sles11.yml
      params:
        MAKE_TEST_COMMAND: installcheck-externaltable
        BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
        TEST_OS: sles
    - task: basic_exttab
      timeout: 1h
      file: gpdb_src/ci/concourse/tinc_gpdb_sles11.yml
      params:
        MAKE_TEST_COMMAND: basic_exttab
        TEST_OS: sles

- name: regression_tests_gpfdist_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      passed: [compile_gpdb_centos]
      resource: sync_tools_gpdb_centos
    - get: bin_gpdb
      passed: [compile_gpdb_centos]
      trigger: true
      resource: bin_gpdb_centos
    - get: centos-gpdb-dev-5
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: installcheck-gpfdist
      TEST_OS: centos

- name: regression_tests_gpfdist_sles
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_sles]
    - get: sync_tools_gpdb
      passed: [compile_gpdb_sles]
      resource: sync_tools_gpdb_sles
    - get: bin_gpdb
      passed: [compile_gpdb_sles]
      trigger: true
      resource: bin_gpdb_sles
  - task: ic_gpdb
    file: gpdb_src/ci/concourse/ic_gpdb_sles11.yml
    params:
      BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off
      MAKE_TEST_COMMAND: installcheck-gpfdist
      TEST_OS: sles


- name: regression_tests_gpcloud_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: regression_tests_gpcloud
    file: gpdb_src/ci/concourse/regression_tests_gpcloud.yml
    image: centos-gpdb-dev-5
    params:
      gpcloud_access_key_id: {{gpcloud-access-key-id}}
      gpcloud_secret_access_key: {{gpcloud-secret-access-key}}
      overwrite_gpcloud: false
      TEST_OS: centos

- name: MU_check_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: MU_check_centos
    file: gpdb_src/ci/concourse/gpMgmt_check_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      TEST_OS: centos

- name: pt-rebuild
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: persistent_table_rebuild
    timeout: 1h
    file: gpdb_src/ci/concourse/behave_tests.yml
    image: centos-gpdb-dev-5
    params:
      BEHAVE_TAGS: persistent_rebuild
      BLDWRAP_POSTGRES_CONF_ADDONS: ""
      TEST_OS: centos

- name: MM_analyzedb
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: persistent_table_rebuild
    timeout: 1h
    file: gpdb_src/ci/concourse/behave_tests.yml
    image: centos-gpdb-dev-5
    params:
      BEHAVE_TAGS: analyzedb
      BLDWRAP_POSTGRES_CONF_ADDONS: ""
      TEST_OS: centos

- name: cs-fts_centos
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - aggregate:
    - task: fts_transitions_part01
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: fts_transitions_part01
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos
    - task: fts_transitions_part02
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: fts_transitions_part02
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos
    - task: fts_transitions_part03
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: fts_transitions_part03
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos

- name: cs-storage_centos
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - aggregate:
    - task: aocoalter_catalog_loaders
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: aocoalter_catalog_loaders
        BLDWRAP_POSTGRES_CONF_ADDONS: "fsync=off"
        TEST_OS: centos
    - task: storage_persistent_filerep_accessmethods_and_vacuum
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: storage_persistent_filerep_accessmethods_and_vacuum
        BLDWRAP_POSTGRES_CONF_ADDONS: "fsync=off"
        TEST_OS: centos
    - task: filerep_end_to_end_xlog_ctlog_cons
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: filerep_end_to_end_xlog_ctlog_cons
        BLDWRAP_POSTGRES_CONF_ADDONS: "fsync=off"
        TEST_OS: centos
    - task: storage_queryfinish_and_transactionmanagement
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: storage_queryfinish_and_transactionmanagement
        BLDWRAP_POSTGRES_CONF_ADDONS: "fsync=off"
        TEST_OS: centos

- name: cs-subtransaction_centos
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: sub_transaction_limit_removal
    timeout: 3h
    file: gpdb_src/ci/concourse/tinc_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: sub_transaction_limit_removal
      TEST_OS: centos

- name: cs-uao_centos
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: uao_orca_both_regression
    timeout: 2h
    file: gpdb_src/ci/concourse/tinc_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: uao_orca_both_regression
      TEST_OS: centos

- name: cs-bin-swap
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: copy_bin_from
    - get: centos-gpdb-dev-5
  - task: bin-swap
    timeout: 3h
    file: gpdb_src/ci/concourse/tinc_gpdb_binswap.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: bin-swap
      BLDWRAP_POSTGRES_CONF_ADDONS: "fsync=off"
      TEST_OS: centos

- name: regression_tests_gphdfs_hadoop_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-5
  - task: regression_tests_gphdfs
    file: gpdb_src/ci/concourse/regression_tests_gphdfs.yml
    image: centos-gpdb-dev-5
    params:
      TEST_OS: centos

- name: regression_tests_gphdfs_mapr_centos
  ensure:
    <<: *set_failed
  on_success:
    <<: *ccp_destroy
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos7]
    - get: bin_gpdb
      passed: [compile_gpdb_centos7]
      trigger: true
      resource: bin_gpdb_centos7
    - get: ccp_src
    - get: centos-gpdb-dev-7
    - get: sync_tools_gpdb
      passed: [compile_gpdb_centos7]
      resource: sync_tools_gpdb_centos7
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        number_of_nodes: 1
        PLATFORM: centos7
        instance_type: n1-standard-8
  - task: gen_and_initialize_mapr
    file: gpdb_src/ci/concourse/gen_mapr.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: regression_tests_gphdfs_mapr
    file: gpdb_src/ci/concourse/regression_tests_gphdfs_mapr.yml
    image: centos-gpdb-dev-7
    params:
      TEST_OS: centos
      TARGET_OS_VERSION: 7

## ======================================================================
## terraform jobs
## ======================================================================

- name: MM_gpcheckcat
  plan:
  - aggregate:
    - get: ccp_src
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=gpcheckcat
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: MM_gprecoverseg
  plan:
  - aggregate:
    - get: ccp_src
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=gprecoverseg
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: MM_gpexpand_1
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 5
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: gpexpand_1
      CUSTOM_ENV: HOST1=mdw HOST2=sdw1 HOST3=sdw2 HOST4=sdw3 HOST5=sdw4
      PRE_TEST_SCRIPT: bash -c 'ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub; for i in mdw sdw{1..4}; do ssh centos@$i "sudo chmod 777 /usr/local"; done'
  ensure:
    <<: *set_failed

- name: MM_gpexpand_2
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 5
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: gpexpand_2
      CUSTOM_ENV: HOST1=mdw HOST2=sdw1 HOST3=sdw2 HOST4=sdw3 HOST5=sdw4
      PRE_TEST_SCRIPT: bash -c 'ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub; for i in mdw sdw{1..4}; do ssh centos@$i "sudo chmod 777 /usr/local"; done'
  ensure:
    <<: *set_failed

- name: MM_gppkg
  plan:
  - aggregate:
    - get: ccp_src
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
    - get: pgcrypto_gppkg
      resource: pgcrypto_rhel5_gppkg
    - get: postgis_gppkg
      resource: postgis_rhel5_gppkg
    - get: plperl_gppkg
      resource: plperl_rhel6_gppkg
    - get: pljava_gppkg
      resource: released_pljava_rhel5_gppkg
    - get: plr_gppkg
      resource: released_plr_rhel5_gppkg
    - get: libgppc_gppkg
      resource: libgppc_rhel5_gppkg
    - get: before_orca_plperl_gppkg
      resource: before_orca_plperl_rhel6_gppkg
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: get_gppkgs
    file: gpdb_src/ci/concourse/get_gppkgs.yml
    image: centos-gpdb-dev-6
  - task: run_tests
    file: gpdb_src/ci/concourse/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: gppkg
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: cs_walrep_1
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: walrep_1
  ensure:
    <<: *set_failed

- name: cs_walrep_2
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: walrep_2
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_01_10
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_pg_twophase_01_10
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_11_20
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_pg_twophase_11_20
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_21_30
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_pg_twophase_21_30
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_31_40
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_pg_twophase_31_40
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_41_49
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_pg_twophase_41_49
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_switch
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: test_switch_01_12
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_schema_topology
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: crash_recovery_schema_topology
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_04_10
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: crash_recovery_04_10
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_11_20
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: crash_recovery_11_20
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_21_30
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: crash_recovery_21_30
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_31_42
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        <<: *ccp_terraform_bigger_vars
        number_of_nodes: 1
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: crash_recovery_31_42
  ensure:
    <<: *set_failed

- name: cs_filerep_end_to_end_full_primary
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        <<: *ccp_default_vars
        instance_type: n1-highmem-4
        number_of_nodes: 2
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: filerep_end_to_end_full_primary
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: cs_filerep_end_to_end_incr_primary
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        <<: *ccp_default_vars
        instance_type: n1-highmem-4
        number_of_nodes: 2
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: filerep_end_to_end_incr_primary
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: cs_filerep_end_to_end_full_mirror
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        <<: *ccp_default_vars
        instance_type: n1-highmem-4
        number_of_nodes: 2
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: filerep_end_to_end_full_mirror
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: cs_filerep_end_to_end_incr_mirror
  plan:
  - aggregate: *ccp_aws_aggregate_gets
  - put: terraform
    <<: *cs_ccp_terraform_params
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        <<: *ccp_default_vars
        instance_type: n1-highmem-4
        number_of_nodes: 2
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: filerep_end_to_end_incr_mirror
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

# Stage 3: Packaging of installer file
# Stage 3a: Packaging the Release Candidate (rc)

- name: gpdb_rc_packaging_centos
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [icg_planner_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed:
      - icb_orca_centos
      - icb_planner_centos
      - icg_orca_centos
      - icg_planner_centos
      - ic_externaltable_centos
      - regression_tests_gpcloud_centos
      - MU_check_centos
      trigger: true
    - get: centos-gpdb-dev-5
  - task: separate_qautils_files_for_rc
    file: gpdb_src/ci/concourse/separate_qautils_files_for_rc.yml
    image: centos-gpdb-dev-5
    params:
      QAUTILS_TARBALL: rc_bin_gpdb/QAUtils-rhel5-x86_64.tar.gz
  - aggregate:
    - task: gpdb_rc_packaging_centos
      file: gpdb_src/ci/concourse/gpdb_packaging.yml
      image: centos-gpdb-dev-5
      input_mapping:
        bin_gpdb: rc_bin_gpdb
      output_mapping:
        packaged_gpdb: packaged_gpdb_rc
      params:
        INSTALL_SCRIPT_SRC: gpdb_src/gpAux/releng/bin/installer-header-rhel5-gpdb.sh
        INSTALLER_ZIP: packaged_gpdb/greenplum-db-@GP_VERSION@-rhel5-x86_64.zip
        ADD_README_INSTALL: true
    - task: gpdb_appliance_rhel5_rc_packaging
      file: gpdb_src/ci/concourse/gpdb_packaging.yml
      image: centos-gpdb-dev-5
      input_mapping:
        bin_gpdb: rc_bin_gpdb
      output_mapping:
        packaged_gpdb: packaged_gpdb_appliance_rc
      params:
        INSTALL_SCRIPT_SRC: gpdb_src/gpAux/releng/bin/installer-appliance-header-rhel5-gpdb.sh
        INSTALLER_ZIP: packaged_gpdb/greenplum-db-appliance-@GP_VERSION@-rhel5-x86_64.zip
  - aggregate:
    - put: installer_rhel5_gpdb_rc
      params:
        file: packaged_gpdb_rc/greenplum-db-*-rhel5-x86_64.zip
    - put: installer_rhel5_gpdb_rc_sha256
      params:
        file: packaged_gpdb_rc/greenplum-db-*-rhel5-x86_64.zip.sha256
    - put: installer_appliance_rhel5_gpdb_rc
      params:
        file: packaged_gpdb_appliance_rc/greenplum-db-appliance-*-rhel5-x86_64.zip
    - put: installer_appliance_rhel5_gpdb_rc_sha256
      params:
        file: packaged_gpdb_appliance_rc/greenplum-db-appliance-*-rhel5-x86_64.zip.sha256
    - put: qautils_rhel5_tarball
      params:
        file: rc_bin_gpdb/QAUtils-rhel5-x86_64.tar.gz

- name: gpdb_rc_packaging_sles
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [icg_planner_sles]
    - get: bin_gpdb
      resource: bin_gpdb_sles
      passed:
      - icg_orca_sles
      - icg_planner_sles
      - ic_externaltable_sles
      trigger: true
  - task: separate_qautils_files_for_rc
    file: gpdb_src/ci/concourse/separate_qautils_files_for_rc_sles11.yml
    params:
      QAUTILS_TARBALL: rc_bin_gpdb/QAUtils-sles11-x86_64.tar.gz
  - task: gpdb_rc_packaging_sles
    file: gpdb_src/ci/concourse/gpdb_packaging_sles11.yml
    input_mapping:
      bin_gpdb: rc_bin_gpdb
    params:
      INSTALL_SCRIPT_SRC: gpdb_src/gpAux/releng/bin/installer-header-sles11-gpdb.sh
      INSTALLER_ZIP: packaged_gpdb/greenplum-db-@GP_VERSION@-sles11-x86_64.zip
      ADD_README_INSTALL: true
  - put: installer_sles11_gpdb_rc
    params:
      file: packaged_gpdb/greenplum-db-*-sles11-x86_64.zip
  - put: installer_sles11_gpdb_rc_sha256
    params:
      file: packaged_gpdb/greenplum-db-*-sles11-x86_64.zip.sha256
  - put: qautils_sles11_tarball
    params:
      file: rc_bin_gpdb/QAUtils-sles11-x86_64.tar.gz

# Stage 3b: Packaging of source code
- name: gpdb_src_packaging
  plan:
  - aggregate:
    - get: gpdb_src
      passed:
      - icb_orca_centos
      - icb_planner_centos
      - icg_orca_centos
      - icg_planner_centos
      - ic_externaltable_centos
      - regression_tests_gpfdist_centos
      - regression_tests_gpcloud_centos
      - MU_check_centos
      - icg_orca_sles
      - icg_planner_sles
      - ic_externaltable_sles
      trigger: true
    - get: centos-gpdb-dev-5
  - task: gpdb_src_packaging
    file: gpdb_src/ci/concourse/gpdb_src_packaging.yml
    image: centos-gpdb-dev-5

  - put: gpdb_src_archive
    params:
      file: gpdb_src_archive/greenplum-db-*-src.tar.gz

# Stage 4: Behave Tests

# When creating a new job, to ensure that the test runs only when all stage 3
# jobs have passed, use the following syntax:
#
#  - aggregate:
#    - get: gpdb_src
#      passed: [compile_gpdb_centos]
#    - get: bin_gpdb
#      resource: bin_gpdb_centos
#      passed: *Stage3JobsCentos
#      trigger: true
#
# This uses Yaml pointer syntax; for details, see http://tinyurl.com/gprkjoq
#
# Tests should be named with the format [team]_[tag] where team is the
# initials of the team that owns the suite (e.g. MU = Management Utilities)
# and tag is the tag passed to behave.

- name: DPM_backup-restore
  plan:
  - aggregate:
    - get: ccp_src
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_independent_backup_restore_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backups,restores --tags=-nbuonly --tags=-ddonly
  - task: run_backup_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=-nbuonly --tags=-ddonly
  - task: run_restore_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=-nbuonly --tags=-ddonly
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: DPM_backup-restore_filename_compatibility
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
    - get: centos-gpdb-dev-6
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: setup_gpdb4-3-11-3
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_backup_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=-nbuonly --tags=-ddonly --tags=-skip_filename_compatibility
  - task: setup_new_gpdb4
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_restore_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=-nbuonly --tags=-ddonly --tags=-skip_filename_compatibility
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: DPM_backup-restore_ddboost_part1
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"]
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["ddboost"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartI
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_backup-restore_ddboost_part2
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"]
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["ddboost"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartII
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_backup-restore_ddboost_part3
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"]
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["ddboost"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartIII
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_gptransfer-43x-to-43x
  plan:
  - aggregate:
    - get: ccp_src
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: centos-gpdb-dev-6
  # The separate clusters can be created in parallel with the aggregate and do blocks
  #  The terraform put and gen cluster that correspond must still happen serially
  - aggregate:
    - do:
      - put: terraform
        params:
          <<: *ccp_default_params
          vars:
            <<: *ccp_default_vars
            instance_type: n1-standard-2
      - task: gen_cluster1
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
        input_mapping:
          gpdb_binary: bin_gpdb
      - task: gpinitsystem
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotaldata/ccp
              tag: "7"
          inputs:
          - name: terraform
          - name: ccp_src
          - name: cluster_env_files
          run:
            path: ccp_src/scripts/gpinitsystem.sh
    - do:
      - put: terraform2
        params:
          <<: *ccp_default_params
          vars:
            <<: *ccp_default_vars
            instance_type: n1-standard-2
            cluster_suffix: "-2"
      - task: gen_cluster2
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
        input_mapping:
          gpdb_binary: bin_gpdb
          terraform: terraform2
        output_mapping:
          cluster_env_files: cluster_env_files2
        on_failure:
          put: terraform2
          params:
            action: destroy
            env_name_file: terraform2/name
            terraform_source: ccp_src/google/
            vars:
              <<: *ccp_default_vars
              cluster_suffix: "-2"
          get_params:
            action: destroy
      - task: gpinitsystem
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotaldata/ccp
              tag: "7"
          inputs:
          - name: terraform
          - name: ccp_src
          - name: cluster_env_files2
            path: cluster_env_files
          run:
            path: ccp_src/scripts/gpinitsystem.sh
  - task: gptransfer_pre_test_setup
    config:
      platform: linux
      inputs:
        - name: cluster_env_files
        - name: cluster_env_files2
        - name: ccp_src
        - name: gpdb_src
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: sh
        args:
        - -exc
        - |
          source gpdb_src/ci/concourse/scripts/transfer_utils.sh; setup_gptransfer
  - task: run_gptransfer_tests
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=gptransfer
      CUSTOM_ENV: export GPTRANSFER_DEST_HOST=mdw; export GPTRANSFER_DEST_PORT=5432; export GPTRANSFER_DEST_USER=gpadmin; export GPTRANSFER_MAP_FILE=/tmp/source_map_file; export GPTRANSFER_SOURCE_HOST=mdw-2; export GPTRANSFER_SOURCE_PORT=5432; export GPTRANSFER_SOURCE_USER=gpadmin;
    on_success:
      <<: *ccp_destroy_2_cluster
    on_failure:
      <<: *set_failed_2_cluster
  ensure:
    <<: *set_failed_2_cluster

- name: DPM_backup-restore_netbackup_part1
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["netbackup"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartI
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_backup-restore_netbackup_part2
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["netbackup"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartII
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_backup-restore_netbackup_part3
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      tags: ["netbackup"]
      resource: sync_tools_gpdb_centos
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartIII
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_netbackup_filename_compatibility_part1
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["netbackup"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["netbackup"]
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_backup_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=nbusetup76,nbupartI --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
  - task: setup_new_gpdb4
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=nbusetup77,nbupartI --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_netbackup_filename_compatibility_part2
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["netbackup"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["netbackup"]
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_backup_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=nbusetup76,nbupartII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
  - task: setup_new_gpdb4
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=nbusetup77,nbupartII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_netbackup_filename_compatibility_part3
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["netbackup"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["netbackup"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["netbackup"]
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    resource: terraform_for_dpm
    tags: ["netbackup"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_backup_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=nbusetup76,nbupartIII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
  - task: setup_new_gpdb4
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["netbackup"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=nbusetup77,nbupartIII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_ddboost_filename_compatibility_part1
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["ddboost"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["ddboost"]
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_backup_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=ddboostsetup,ddpartI --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
  - task: setup_new_gpdb4
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=ddboostsetup,ddpartI --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_ddboost_filename_compatibility_part2
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["ddboost"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["ddboost"]
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_backup_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=ddboostsetup,ddpartII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
  - task: setup_new_gpdb4
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=ddboostsetup,ddpartII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: DPM_ddboost_filename_compatibility_part3
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      tags: ["ddboost"]
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: bin_gpdb4-3-11-3
      tags: ["ddboost"]
      resource: bin_gpdb4-3-11-3_centos
    - get: ccp_src
      tags: ["ddboost"]
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
    - get: ddboost_rpm
      tags: ["ddboost"]
  - put: terraform
    resource: terraform_for_dpm
    tags: ["ddboost"]
    params:
      <<: *dpm_ccp_default_params
      vars:
        <<: *ccp_aws_default_vars
  - task: setup_gpdb4-3-11-3
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb4-3-11-3
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
       - name: ddboost_rpm
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: '7'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/scripts/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm mdw:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          scp ddboost_rpm/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm sdw1:/tmp/compat-libstdc-33-3.2.3-69.el6.x86_64.rpm
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/ci/concourse/scripts/backup_utils.sh; setup_ddboost
  - task: run_backup_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_backups --tags=ddboostsetup,ddpartIII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
  - task: setup_new_gpdb4
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/setup_new_gpdb_for_backup_restore.yml
    params:
      <<: *dpm_ccp_gen_cluster_default_params
  - task: run_restore_tests
    tags: ["ddboost"]
    file: gpdb_src/ci/concourse/terraform_run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=backup_and_restore_restores --tags=ddboostsetup,ddpartIII --tags=-skip_filename_compatibility
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed_dpm

- name: QP_memory-accounting
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_centos]
    - get: sync_tools_gpdb
      passed: [compile_gpdb_centos]
      resource: sync_tools_gpdb_centos
    - get: bin_gpdb
      passed: [compile_gpdb_centos]
      resource: bin_gpdb_centos
      trigger: true
    - get: centos-gpdb-dev-5
  - task: memory-accounting
    timeout: 3h
    file: gpdb_src/ci/concourse/tinc_gpdb.yml
    image: centos-gpdb-dev-5
    params:
      MAKE_TEST_COMMAND: memory_accounting
      BLDWRAP_POSTGRES_CONF_ADDONS: ""
      TEST_OS: "centos"

- name: QP_optimizer-functional
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [compile_gpdb_centos]
    - get: bin_gpdb
      resource: bin_gpdb_centos
      passed: [compile_gpdb_centos]
      trigger: true
    - get: sync_tools_gpdb
      passed: [compile_gpdb_centos]
      resource: sync_tools_gpdb_centos
    - get: centos-gpdb-dev-5
  - aggregate:
    - task: optimizer_functional_part1
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: optimizer_functional_part1
        BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off optimizer_print_missing_stats=off
        TEST_OS: centos
    - task: optimizer_functional_part2
      timeout: 3h
      file: gpdb_src/ci/concourse/tinc_gpdb.yml
      image: centos-gpdb-dev-5
      params:
        MAKE_TEST_COMMAND: optimizer_functional_part2
        BLDWRAP_POSTGRES_CONF_ADDONS: fsync=off optimizer_print_missing_stats=off
        TEST_OS: centos

- name: mpp-interconnect
  plan:
  - aggregate: *ccp_aggregate_gets
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    <<: *ccp_gen_cluster_params
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: mpp_interconnect
      PRE_TEST_SCRIPT_USER: centos
      PRE_TEST_SCRIPT: sudo bash -c 'yum --cacheonly list installed kernel-devel-$(uname -r)'
  ensure:
    <<: *set_failed

- name: mpp_interconnect_sles
  plan:
  - aggregate:
    - get: ccp_src
    - get: gpdb_src
      passed: [compile_gpdb_sles]
    - get: gpdb_binary
      resource: bin_gpdb_sles
      passed: [compile_gpdb_sles]
      trigger: true
    - get: centos-gpdb-dev-6
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: sles11
        default_image_user: root
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: sles11
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: run_tests
    <<: *ccp_run_tinc_tests_params
    params:
      TINC_TARGET: mpp_interconnect
  ensure:
    <<: *set_failed

## ======================================================================
## manual jobs
## ======================================================================
- name: bootstrap-ccache
  plan:
  - get: gpdb_src
  - aggregate:
    - do:
      - task: centos5
        file: gpdb_src/ci/concourse/bootstrap-ccache.yml
        output_mapping: {ccache_tar: ccache_gpdb_centos5}
      - put: ccache_gpdb_centos5
        params: {file: ccache_gpdb_centos5/ccache_gpdb.tar.gz}
    - do:
      - task: centos6
        file: gpdb_src/ci/concourse/bootstrap-ccache.yml
        output_mapping: {ccache_tar: ccache_gpdb_centos6}
      - put: ccache_gpdb_centos6
        params: {file: ccache_gpdb_centos6/ccache_gpdb.tar.gz}
    - do:
      - task: centos7
        file: gpdb_src/ci/concourse/bootstrap-ccache.yml
        output_mapping: {ccache_tar: ccache_gpdb_centos7}
      - put: ccache_gpdb_centos7
        params: {file: ccache_gpdb_centos7/ccache_gpdb.tar.gz}
    - do:
      - task: sles11
        file: gpdb_src/ci/concourse/bootstrap-ccache.yml
        output_mapping: {ccache_tar: ccache_gpdb_sles11}
      - put: ccache_gpdb_sles11
        params: {file: ccache_gpdb_sles11/ccache_gpdb.tar.gz}
    - do:
      - task: empty
        file: gpdb_src/ci/concourse/bootstrap-ccache.yml
        output_mapping: {ccache_tar: ccache_empty}
      - put: ccache_empty
        params: {file: ccache_empty/ccache_gpdb.tar.gz}

- name: MADlib_Test_gppkg_Orca_centos5
  plan:
  - aggregate:
    - get: madlib_ci
    - get: gpdb_src
      passed:
      - icb_orca_centos
      - icg_planner_centos
    - get: bin_gpdb
      resource: bin_gpdb_centos
      trigger: true
      passed:
      - icb_orca_centos
      - icg_planner_centos
    - get: centos-gpdb-dev-5
    - get: madlib_gppkg
  - task: MADlib_Test_gppkg
    file: madlib_ci/concourse/tasks/madlib_test_gppkg.yml
    image: centos-gpdb-dev-5
    params:
      TEST_OS: centos
      ORCA: "on"

- name: MADlib_Test_gppkg_Planner_centos5
  plan:
  - aggregate:
    - get: madlib_ci
    - get: gpdb_src
      passed:
      - icb_orca_centos
      - icg_planner_centos
    - get: bin_gpdb
      resource: bin_gpdb_centos
      trigger: true
      passed:
      - icb_orca_centos
      - icg_planner_centos
    - get: centos-gpdb-dev-5
    - get: madlib_gppkg
  - task: MADlib_Test_gppkg
    file: madlib_ci/concourse/tasks/madlib_test_gppkg.yml
    image: centos-gpdb-dev-5
    params:
      TEST_OS: centos
      ORCA: "off"

## ======================================================================
##  ____      _
## |  _ \ ___| | ___  __ _ ___  ___
## | |_) / _ \ |/ _ \/ _` / __|/ _ \
## |  _ <  __/ |  __/ (_| \__ \  __/
## |_| \_\___|_|\___|\__,_|___/\___|
## ======================================================================

- name: Release_Candidate
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
      passed:
      - compile_gpdb_centos
      - compile_gpdb_centos6
      - compile_gpdb_centos7
      - compile_gpdb_sles
      - cs-fts_centos
      - cs-storage_centos
      - cs-subtransaction_centos
      - cs-uao_centos
      - cs-bin-swap
      - cs_walrep_1
      - cs_walrep_2
      - cs_pg_twophase_01_10
      - cs_pg_twophase_11_20
      - cs_pg_twophase_21_30
      - cs_pg_twophase_31_40
      - cs_pg_twophase_41_49
      - cs_pg_twophase_switch
      - cs_crash_recovery_schema_topology
      - cs_crash_recovery_04_10
      - cs_crash_recovery_11_20
      - cs_crash_recovery_21_30
      - cs_crash_recovery_31_42
      - cs_filerep_end_to_end_full_primary
      - cs_filerep_end_to_end_incr_primary
      - cs_filerep_end_to_end_full_mirror
      - cs_filerep_end_to_end_incr_mirror
      - icb_orca_centos
      - icb_planner_centos
      - icg_orca_centos
      - icg_orca_sles
      - icg_planner_centos
      - icg_planner_sles
      - ic_externaltable_centos
      - ic_externaltable_sles
      - regression_tests_gpfdist_centos
      - regression_tests_gpfdist_sles
      - regression_tests_gpcloud_centos
      - regression_tests_gphdfs_hadoop_centos
      - regression_tests_gphdfs_mapr_centos
      - MU_check_centos
      - pt-rebuild
      - gpdb_rc_packaging_centos
      - gpdb_src_packaging
      - gpdb_rc_packaging_sles
      - DPM_backup-restore
      - DPM_backup-restore_filename_compatibility
      # - DPM_backup-restore_netbackup_part1
      # - DPM_backup-restore_netbackup_part2
      # - DPM_backup-restore_netbackup_part3
      # - DPM_netbackup_filename_compatibility_part1
      # - DPM_netbackup_filename_compatibility_part2
      # - DPM_netbackup_filename_compatibility_part3
      - DPM_backup-restore_ddboost_part1
      - DPM_backup-restore_ddboost_part2
      - DPM_backup-restore_ddboost_part3
      - DPM_ddboost_filename_compatibility_part1
      - DPM_ddboost_filename_compatibility_part2
      - DPM_ddboost_filename_compatibility_part3
      - DPM_gptransfer-43x-to-43x
      - QP_memory-accounting
      - QP_optimizer-functional
      - mpp-interconnect
      - mpp_interconnect_sles
      - compile_gpdb_windows_ccl
      - TINC_pgcrypto
      - MM_analyzedb
      - MM_gpcheckcat
      - MM_gpexpand_1
      - MM_gpexpand_2
      - MM_gppkg
      - MM_gprecoverseg
      - MADlib_Test_gppkg_Orca_centos5
      - MADlib_Test_gppkg_Planner_centos5

